type Create @entity(immutable: true) {
  id: Bytes!
  assetId: BigInt! # uint256
  sender: Bytes! # address
  arTxId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isContract: Boolean!
}

type Remove @entity(immutable: true) {
  id: Bytes!
  assetId: BigInt! # uint256
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Trade @entity(immutable: true) {
  id: Bytes!
  tradeType: Int! # uint8
  assetId: BigInt! # uint256
  user: User! # address
  tokenAmount: BigDecimal!
  ethAmount: BigDecimal!
  creatorFee: BigDecimal!
  platformFee: BigDecimal! # uint256
  price: BigDecimal!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isContract: Boolean!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  assetId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type User @entity {
  id: ID!
  address: Bytes! # address
  totalTrades: BigInt!
  totalAssets: BigInt!
  totalTradVolume: BigDecimal!
  totalTradValue: BigDecimal!
  totalFees: BigDecimal!
  totalHolders: BigInt!
  isContract: Boolean!
  assets: [UserAsset!]! @derivedFrom(field: "user")
  trades: [Trade!]! @derivedFrom(field: "user")
}

type UserAsset @entity {
  id: ID! # `user.id.concat(asset.id)`
  assetId: BigInt!
  user: User!
  asset: Asset!
  amount: BigDecimal!
  avgPrice: BigDecimal!
}

type Asset @entity {
  id: ID!
  assetId: BigInt!
  arTxId: String
  creator: User
  totalSupply: BigDecimal!
  totalTrades: BigInt!
  totalFees: BigDecimal!
  totalTradValue: BigDecimal!
  totalTradVolume: BigDecimal!
  totalHolders: BigInt!
  holders: [UserAsset!]! @derivedFrom(field: "asset")
  isDelete: Boolean!
}

type SpaceFactory @entity {
  id: ID!
  user: Bytes! # address
  spaceId: BigInt! # uint256
  spaceAddress: Bytes!
  descriptionAssetId: BigInt! # uint256
  spaceName: String! # string
  avatarArTxId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  spaceAsset: Asset!
  spaceUser: User!
}

type Space @entity {
  id: ID!
  sender: Bytes!
  parentId: BigInt!
  assetId: BigInt!
  arTxId: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isDelete: Boolean!
  spaceFactory: SpaceFactory
}

type SpaceCount @entity {
  id: ID!
  parentId: BigInt!
  count: BigInt!
}
